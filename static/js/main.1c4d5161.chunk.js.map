{"version":3,"sources":["components/expenses/expenses.tsx","utils/formatUtil.ts","components/card/card.jsx","components/expense/expense.tsx","components/expenseDate/expenseDate.tsx","components/expenseForm/expenseForm.tsx","components/newExpense/newExpense.tsx","components/expenseFilter/expenseFilter.tsx","components/chartBar/chartBar.tsx","components/chart/chart.tsx","components/expenseChart/expenseChart.tsx","App.tsx","index.tsx"],"names":["NotFound","react_default","a","createElement","className","Expenses","props","_useState","useState","_useState2","Object","slicedToArray","filter","setFilter","itemFilters","items","item","date","getFullYear","toString","expenses_NotFound","length","map","expense","components_expense_expense","assign","key","id","card_card","expenseFilter_expenseFilter","selected","onChangeFilter","expenseChart","expenses","React","memo","concat","children","title","expenseDate_expenseDate","amount","_ref","_splitDate","month","toLocaleString","day","year","splitDate","defaultValues","Date","ExpenseForm","objectSpread","setExpense","onSubmit","event","preventDefault","onSaveExpense","type","value","onChange","prevState","target","min","step","Number","toISOString","split","showCancelButton","onClick","onCancel","NewExpense","isEditMode","setEditMode","showFormHandler","Form","expenseForm_expenseForm","Math","random","onAddExpense","ChartBar","point","max","barFillHeight","round","style","height","background","label","Chart","points","chartBar_chartBar","ExpensesChart","chartPoints","forEach","getMonth","apply","toConsumableArray","chart_chart","App","setItems","newExpense_newExpense","components_expenses_expenses","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1c4d5161.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Expense, ExpenseFilter, Card, ExpensesChart } from \"..\";\r\nimport { ExpensesProps } from \"../../models/expenses.props\";\r\nimport { formatToFullYear } from \"../../utils/formatUtil\";\r\nimport './expenses.css';\r\n\r\n\r\nconst NotFound = () => <h2 className=\"expenses__fallback\">No Expenses found.</h2>\r\n\r\nconst Expenses = (props: ExpensesProps) => {\r\n  \r\n  const [filter, setFilter] = useState<string>('All');\r\n\r\n  const filterHandler = (selected: string) => {\r\n    setFilter(selected);\r\n  }\r\n  \r\n  let itemFilters = props.items;\r\n  if (filter !== 'All') {\r\n    itemFilters = itemFilters.filter(item => formatToFullYear(item.date) === filter);\r\n  }\r\n\r\n  let items = [<NotFound />];\r\n  if (itemFilters.length !== 0) {\r\n    items = itemFilters.map((expense) => <Expense key={expense.id} {...expense} />);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter selected={filter} onChangeFilter={filterHandler}/>\r\n      <ExpensesChart expenses={itemFilters} />\r\n      {items}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","\r\nexport const splitDate = (date: Date) => ({\r\n  month: date.toLocaleString('en-US', { month: 'long' }),\r\n  day: date.toLocaleString('en-US', { day: '2-digit' }),\r\n  year: date.getFullYear()\r\n})\r\n\r\nexport const formatToInput = (date: Date) => {\r\n  return date.toISOString().split('T')[0];\r\n}\r\n\r\nexport const formatToFullYear = (date: Date) => {\r\n  return date.getFullYear().toString();\r\n}","import React from 'react';\r\nimport './card.css';\r\n\r\nconst Card = props => <div className={`card ${props.className}`}>{props.children}</div>;\r\n\r\nexport default React.memo(Card);","import React, {useState} from 'react';\r\nimport { ExpenseDate, Card } from \"..\";\r\nimport ExpenseProps from \"../../models/expense.type\";\r\nimport \"./expense.css\";\r\n\r\nconst Expense = (props: ExpenseProps) => {\r\n  const [title] = useState(props.title);\r\n\r\n  return (\r\n    <Card className=\"expense\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(Expense);\r\n","import React from \"react\";\r\nimport { splitDate } from \"../../utils/formatUtil\";\r\nimport './expenseDate.css';\r\n\r\n\r\nconst ExpenseDate = ({date}: {date: Date}) => {\r\n  const { month, year, day } = splitDate(date);\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExpenseDate);","import React, {useState} from 'react';\r\nimport ExpenseType from \"../../models/expense.type\";\r\nimport { ExpenseFormProps } from \"../../models/expenseForm.props\";\r\nimport { formatToInput } from \"../../utils/formatUtil\";\r\nimport \"./expenseForm.css\";\r\n\r\nconst defaultValues: ExpenseType = {\r\n  amount: 0,\r\n  date: new Date(),\r\n  title: \"\",\r\n};\r\n\r\nconst ExpenseForm = (props: ExpenseFormProps) => {\r\n  const [expense, setExpense] = useState<ExpenseType>({\r\n    ...defaultValues,\r\n    ...props.expense,\r\n  });\r\n\r\n  const titleInputHandler = (event: any) => {\r\n    setExpense((prevState) => ({ \r\n        ...prevState, \r\n        title: event.target.value \r\n    }));\r\n  };\r\n\r\n  const amountInputHandler = (event: any) => {\r\n    setExpense((prevState) => ({\r\n      ...prevState,\r\n      amount: Number(event.target.value),\r\n    }));\r\n  };\r\n\r\n  const dateInputHandler = (event: any) => {\r\n    setExpense((prevState) => ({\r\n      ...prevState,\r\n      date: new Date(event.target.value),\r\n    }));\r\n  };\r\n\r\n  const submitHandler = (event: any) => {\r\n    event.preventDefault();\r\n    props.onSaveExpense && props.onSaveExpense(expense);\r\n    setExpense(defaultValues);\r\n  };\r\n\r\n  const cancelHandler = (event: any)  => {\r\n    event.preventDefault();\r\n    props.onCancel && props.onCancel();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={expense.title}\r\n            onChange={titleInputHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={expense.amount || ''}\r\n            \r\n            onChange={amountInputHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            value={formatToInput(expense.date)}\r\n            onChange={dateInputHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        {props.showCancelButton && <button type=\"button\" onClick={cancelHandler}>Cancel</button>}\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, {useState} from 'react';\r\nimport {ExpenseForm} from \"..\";\r\nimport ExpenseType from \"../../models/expense.type\";\r\nimport { newExpenseProps } from \"../../models/newExpense.props\";\r\n\r\nimport './newExpense.css';\r\n\r\nconst NewExpense = (props: newExpenseProps) => {\r\n\r\n    const [isEditMode, setEditMode] = useState(false);\r\n\r\n    const expenseSaveHanlder = (expense: ExpenseType) => {\r\n        expense.id =`e${Math.random()}`;\r\n        props.onAddExpense && props.onAddExpense(expense);\r\n    }\r\n\r\n    const showFormHandler = () => setEditMode(prevState => !prevState); \r\n    let Form = <button onClick={showFormHandler}>Add new Expense</button>\r\n    if(isEditMode) {\r\n        Form = <ExpenseForm showCancelButton={true} onSaveExpense={expenseSaveHanlder} onCancel={showFormHandler}/>;\r\n    }\r\n\r\n    return (\r\n    <div className=\"new-expense\">\r\n        {Form}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","\r\nimport React from \"react\";\r\nimport { expenseFilterProps } from \"../../models/expenseFilter.props\";\r\nimport './expenseFilter.css';\r\n\r\nconst ExpenseFilter = (props: expenseFilterProps) => {\r\n\r\n    const dropdownChangeHandler = (event: any) => {\r\n        event.preventDefault();\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"2023\">2023</option>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ExpenseFilter);","import React from 'react';\r\nimport { ChartBarProps } from '../../models/chartBar.props';\r\nimport './chartBar.css';\r\n\r\nconst ChartBar = ({point, max}: ChartBarProps) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (max > 0) {\r\n        barFillHeight = `${Math.round((point.value / max) * 100)}%`; \r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{height: barFillHeight, background: 'red'}}></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{point.label}</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ChartBar;","\r\nimport React from 'react';\r\nimport { ChartProps } from '../../models/chart.props';\r\nimport ChartBar from '../chartBar/chartBar';\r\nimport './chart.css';\r\n\r\nconst Chart = ({points, max}: ChartProps) => {\r\n    return (\r\n        <div className='chart'>\r\n            {points.map(point => <ChartBar point={point} key={point.label} max={max}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport { Point } from \"../../models/chart.type\";\r\nimport { ExpenseChartProps } from \"../../models/expenseChart.props\";\r\nimport { Chart } from \"..\";\r\n\r\n\r\nconst ExpensesChart = ({expenses}: ExpenseChartProps) => {\r\n\r\n    const chartPoints: Point[] = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n\r\n    expenses.forEach(expense => {\r\n        const month = expense.date.getMonth();\r\n        chartPoints[month].value += expense.amount;\r\n    });\r\n\r\n    const max = Math.max(...chartPoints.map(point => point.value));\r\n\r\n    return <Chart points={chartPoints} max={max}/>;\r\n}\r\n\r\n\r\n\r\nexport default ExpensesChart;","import React, {useState} from 'react';\nimport './App.css';\nimport { Expenses, NewExpense } from './components';\nimport ExpenseType from './models/expense.type';\n\nconst expenses: ExpenseType[] = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [items, setItems] = useState<ExpenseType[]>(expenses);\n\n  const newExpenseHandler = (expense: ExpenseType) => {\n    setItems(prevState => [...prevState, expense]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={newExpenseHandler}/>\n      <Expenses items={items}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}